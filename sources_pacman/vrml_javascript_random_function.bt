
#VRML: Javascript Random function


#Random Placement

#VRML V2.0 utf8

NavigationInfo { type "EXAMINE" }

DEF ROOT Group {
   children [
      Group {
	 children [
	    DEF TOUCH TouchSensor {}
	    Shape {
	       appearance Appearance { material Material {} }
	       geometry Sphere {}
	    }
	   ]
      }
     ]
}

DEF SCRIPT Script {
   eventIn SFBool clicked
   eventOut MFNode newNodes
   url "vrmlscript:

function clicked(val) {
   if(val) {
      size = 8;
      halfsize = size / 2.0;
      x = Math.random() * size - halfsize;
      y = Math.random() * size - halfsize;
      z = Math.random() * size - halfsize;
      newNodes = Browser.createVrmlFromString('Transform {' +
					      '  translation ' + x + ' ' + y + ' ' + z +
					      '  children Shape {' +
					      '    appearance Appearance { material Material {} }' +
					      '    geometry Box { size 1 1 1 }' +
					      '  }' +
					      '}');
   }
}

"
}

ROUTE TOUCH.isActive TO SCRIPT.clicked
ROUTE SCRIPT.newNodes TO ROOT.addChildren


##################################################

Random Interaction

#VRML V2.0 utf8

# when sphere touched, do random action
# -play sound
# -change color
# -create random box

NavigationInfo { type "EXAMINE" }

DEF ROOT Group {
   children [
      Group {
	 children [
	    DEF TOUCH TouchSensor {}
	    Shape {
	       appearance Appearance { material DEF MAT Material {} }
	       geometry Sphere {}
	    }
	   ]
      }
     ]
}


DEF SCRIPT Script {
   directOutput TRUE
   eventIn SFBool clicked
   eventOut MFNode newNodes
   field SFNode mat USE MAT
   field SFNode clip USE CLIP
   url "vrmlscript:

function clicked(val, ts) {
   if(val) {
      choice = Math.random() * 3;

      // create a randomly placed box
      if(choice < 1) {
	 size = 8;
	 halfsize = size / 2.0;
	 x = Math.random() * size - halfsize;
	 y = Math.random() * size - halfsize;
	 z = Math.random() * size - halfsize;
	 newNodes = Browser.createVrmlFromString('Transform {' +
						 '  translation ' + x + ' ' + y + ' ' + z +
						 '  children Shape {' +
						 '    appearance Appearance {' +
						 '      material Material {}' +
					         '    }' +
						 '    geometry Box { size 1 1 1 }' +
						 '  }' +
						 '}');
      }
      // change the sphere's color
      else if(choice < 2) {
	 mat.diffuseColor = new SFColor(Math.random(), Math.random(), Math.random());
      }
   }
}

"
}

ROUTE TOUCH.isActive TO SCRIPT.clicked
ROUTE SCRIPT.newNodes TO ROOT.addChildren
